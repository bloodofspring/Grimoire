name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: .docker/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/grimoire-bot:latest

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /var/www/Grimoire
            git pull
            cd /var/www/Grimoire/.docker

            export POSTGRES_HOST=${{ vars.POSTGRES_HOST }}
            export POSTGRES_PORT=${{ vars.POSTGRES_PORT }}
            export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export POSTGRES_DB=${{ vars.POSTGRES_DB }}
            export TELEGRAM_BOT_TOKEN=${{ secrets.API_TELEGRAM_BOT_TOKEN }}

            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}

            docker compose -f -p grimoire-bot docker-compose.prod.yml pull
            docker compose -f -p grimoire-bot docker-compose.prod.yml down
            docker compose -f -p grimoire-bot docker-compose.prod.yml up -d bot
            docker system prune -f --filter "label=com.docker.compose.project=grimoire-bot"
